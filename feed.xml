<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://mgrabul.github.io/</id><title>TechBlog</title><subtitle>A minimal, responsive, and powerful Jekyll theme for presenting professional writing.</subtitle> <updated>2022-11-13T19:23:24+00:00</updated> <author> <name>marko grabuloski</name> <uri>https://mgrabul.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://mgrabul.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://mgrabul.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> Â© 2022 marko grabuloski </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Kafka Consumers in Spring Boot</title><link href="https://mgrabul.github.io/posts/KafkaConsumers/" rel="alternate" type="text/html" title="Kafka Consumers in Spring Boot" /><published>2022-11-03T00:00:00+00:00</published> <updated>2022-11-03T00:00:00+00:00</updated> <id>https://mgrabul.github.io/posts/KafkaConsumers/</id> <content src="https://mgrabul.github.io/posts/KafkaConsumers/" /> <author> <name>marko grabuloski</name> </author> <category term="Kafka" /> <summary> Kafka Consumers Spring boot creates Kafka consumers by adding annotation on @KafkaListener, simple example of a consumer is: @Component public class SimpleKafkaConsumer1 { private static final Logger LOGGER = LoggerFactory.getLogger(SimpleKafkaConsumer1.class); private CountDownLatch latch = new CountDownLatch(1); private String payload; @KafkaListener( topics = AlertKafkaProduce... </summary> </entry> <entry><title>Kafka Topic</title><link href="https://mgrabul.github.io/posts/KafkaTopic/" rel="alternate" type="text/html" title="Kafka Topic" /><published>2022-09-14T00:00:00+00:00</published> <updated>2022-09-14T00:00:00+00:00</updated> <id>https://mgrabul.github.io/posts/KafkaTopic/</id> <content src="https://mgrabul.github.io/posts/KafkaTopic/" /> <author> <name>marko grabuloski</name> </author> <category term="Kafka" /> <summary> Kafka Topic Please note that in the following text, consume and read are synonyms in the context of Kafka topic as are write and produce. Is a logical concept that holds, and stores messages. Clients are storing and reading messages from a Kafka topic. The topic is a non-concrete concept, topic is not a physical structure. Topic is an abstraction of the Kafka storage system, similar to what a... </summary> </entry> <entry><title>Kafka Brokers</title><link href="https://mgrabul.github.io/posts/KafkaBrokers/" rel="alternate" type="text/html" title="Kafka Brokers" /><published>2022-09-14T00:00:00+00:00</published> <updated>2022-11-03T16:21:02+00:00</updated> <id>https://mgrabul.github.io/posts/KafkaBrokers/</id> <content src="https://mgrabul.github.io/posts/KafkaBrokers/" /> <author> <name>marko grabuloski</name> </author> <category term="Kafka" /> <summary> Kafka Brokers Kafka is composed of two different clusters, Brokers cluster and ZooKeeper cluster. Note: There is an idea to replace ZooKeeper with own managed quorum. Before starting the broker cluster the Zookeeper cluster needs to be running. Zookeeper Zookeeper cluster is used for orchestration/management of the brokers in the Broker cluster. This implies that the brokers require running z... </summary> </entry> <entry><title>Simple Kafka docker-compose explained</title><link href="https://mgrabul.github.io/posts/KafkaWithDockerCompose/" rel="alternate" type="text/html" title="Simple Kafka docker-compose explained" /><published>2022-06-15T00:00:00+00:00</published> <updated>2022-09-19T08:35:31+00:00</updated> <id>https://mgrabul.github.io/posts/KafkaWithDockerCompose/</id> <content src="https://mgrabul.github.io/posts/KafkaWithDockerCompose/" /> <author> <name>marko grabuloski</name> </author> <category term="Kafka" /> <summary> Prerequisites Installed docker and docker-compose Optional, (Offset Explorer (formerly Kafka Tool))[https://www.kafkatool.com/download.html] UI tool to view the content of the kafka system that includes the nodes, topics, and consumers Simple Kafka docker-compose explained The best way to start learning and using Kafka is with docker, docker-compose. The simplest configuration of Kafka w... </summary> </entry> <entry><title>Setting up WireGardVPN at home</title><link href="https://mgrabul.github.io/posts/WireGuardVPN/" rel="alternate" type="text/html" title="Setting up WireGardVPN at home" /><published>2022-06-15T00:00:00+00:00</published> <updated>2022-09-11T11:23:45+00:00</updated> <id>https://mgrabul.github.io/posts/WireGuardVPN/</id> <content src="https://mgrabul.github.io/posts/WireGuardVPN/" /> <author> <name>marko grabuloski</name> </author> <category term="VPN" /> <category term="Wireguard" /> <summary> How to set-up WireGuardVPN on debian, ubuntu? In this tutorial the following software will be used, required: curl docker, docker compose pivpn duck-dns docker image Running vpn at home requires three general components: VPN server, this is a PC that is running VPN. In our case wireguard Dynamic DNS service, is a service that can connect forward internet traffic from a domain t... </summary> </entry> </feed>
